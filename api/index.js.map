{
  "version": 3,
  "sources": ["<stdin>", "../node_modules/@remix-run/dev/compiler/shims/react.ts", "../app/entry.server.jsx", "/home/isaac/Documents/test-remix/my-remix-app/app/root.jsx", "/home/isaac/Documents/test-remix/my-remix-app/app/routes/index.jsx", "../app/component/Add.jsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "import { RemixServer } from \"@remix-run/react\";\nimport { renderToString } from \"react-dom/server\";\n\nexport default function handleRequest(\n  request,\n  responseStatusCode,\n  responseHeaders,\n  remixContext\n) {\n  let markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "import {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from \"@remix-run/react\";\n\nexport const meta = () => ({\n  charset: \"utf-8\",\n  title: \"New Remix App\",\n  viewport: \"width=device-width,initial-scale=1\",\n});\n\nexport default function App() {\n  return (\n    <html lang=\"en\">\n      <head>\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  );\n}\n", "import { useState } from 'react';\nimport { RiDeleteBin5Line } from 'react-icons/ri';\nimport Add from '../component/Add';\n\nimport styles from '../styles/task.css';\n\nexport const links = () => {\n\treturn [{ rel: 'stylesheet', href: styles }];\n};\n\nexport default function TaskTracker() {\n\tconst [AddSection, setAddSection] = useState(false);\n\tconst [tasks, setTasks] = useState([\n\t\t{ id: 1, task: 'First task', description: 'Description 1', time: '1:00' },\n\t\t{ id: 2, task: 'Second task', description: 'Description 2', time: '2:00' },\n\t]);\n\n\t// Add task\n\tconst addTask = (task) => {\n\t\tconst id = Math.floor(Math.random() * 10000) + 1;\n\t\tconst newTask = { id, ...task };\n\t\tsetTasks([...tasks, newTask]);\n\t};\n\n\t// Delete task\n\tconst deleteTask = (id) => {\n\t\tsetTasks(tasks.filter((tasks) => tasks.id !== id));\n\t};\n\n\t// Toggle add section\n\tconst toggleShow = () => {\n\t\tsetAddSection(!AddSection);\n\t};\n\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<header className=\"header\">\n\t\t\t\t<h1>Todo Application</h1>\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"btn\"\n\t\t\t\t\tstyle={\n\t\t\t\t\t\tAddSection\n\t\t\t\t\t\t\t? { backgroundColor: 'red' }\n\t\t\t\t\t\t\t: { backgroundColor: 'green' }\n\t\t\t\t\t}\n\t\t\t\t\tonClick={toggleShow}\n\t\t\t\t>\n\t\t\t\t\t{AddSection ? 'Close' : 'Add'}\n\t\t\t\t</button>\n\t\t\t</header>\n\t\t\t{AddSection && <Add onAdd={addTask} />}\n\t\t\t{tasks.length > 0 ? (\n\t\t\t\t<div className=\"task-section\">\n\t\t\t\t\t{tasks.map((task) => (\n\t\t\t\t\t\t<div className=\"task\" key={task.id}>\n\t\t\t\t\t\t\t<h3 className=\"task-title\">{task.task}</h3>\n\t\t\t\t\t\t\t<p className=\"task-description\">{task.description}</p>\n\t\t\t\t\t\t\t<p className=\"task-time\">{task.time}</p>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclassName=\"delete-icon\"\n\t\t\t\t\t\t\t\tonClick={() => deleteTask(task.id)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<RiDeleteBin5Line />\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<h1>No Task</h1>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n", "import { useState } from 'react';\n\nexport default function Add({ onAdd }) {\n\tconst [task, setTask] = useState('');\n\tconst [description, setDescription] = useState('');\n\tconst [time, setTime] = useState('');\n\n\tconst submit = (e) => {\n\t\te.preventDefault();\n\t\tif (!task || !time) {\n\t\t\talert(\"You can't submit an empty task or time!\");\n\t\t\treturn;\n\t\t}\n\n\t\tonAdd({ task, description, time });\n\n\t\tsetTask('');\n\t\tsetDescription('');\n\t\tsetTime('');\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<h2>Add Task</h2>\n\t\t\t<form className=\"add-form\">\n\t\t\t\t<div className=\"form-control\">\n\t\t\t\t\t<label>Task</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tvalue={task}\n\t\t\t\t\t\tplaceholder=\"Add Task\"\n\t\t\t\t\t\tonChange={(e) => setTask(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"form-control\">\n\t\t\t\t\t<label>Description</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tvalue={description}\n\t\t\t\t\t\tplaceholder=\"Description\"\n\t\t\t\t\t\tonChange={(e) => setDescription(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"form-control\">\n\t\t\t\t\t<label>Set Day & Time</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tvalue={time}\n\t\t\t\t\t\tplaceholder=\"Day & Time\"\n\t\t\t\t\t\tonChange={(e) => setTime(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<button className=\"btn btn-block\" onClick={submit}>\n\t\t\t\t\tSave task\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t</div>\n\t);\n}\n", "export default {'version':'f11469ad','entry':{'module':'/build/entry.client-2SQOZKPS.js','imports':['/build/_shared/chunk-KCAHDXWN.js','/build/_shared/chunk-IYRIQ6PI.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-TAFUEWPA.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-5B4SU5MJ.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-F11469AD.js'};", "\nimport * as entryServer from \"/home/isaac/Documents/test-remix/my-remix-app/app/entry.server.jsx\";\nimport * as route0 from \"/home/isaac/Documents/test-remix/my-remix-app/app/root.jsx\";\nimport * as route1 from \"/home/isaac/Documents/test-remix/my-remix-app/app/routes/index.jsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route1\n    }\n  };"],
  "mappings": "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",
  "names": []
}
